Index: app/src/main/res/layout/activity_sign_up.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n\r\n<LinearLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".SignUpActivity\"\r\n    android:orientation=\"vertical\"\r\n    android:layout_margin=\"16dp\">\r\n\r\n    <ScrollView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\">\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"vertical\">\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:orientation=\"horizontal\"\r\n                android:paddingStart=\"20dp\"\r\n                android:paddingEnd=\"20dp\"\r\n                android:layout_marginBottom=\"5dp\">\r\n                <TextView\r\n                    android:layout_width=\"100dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:text=\"아이디\"\r\n                    android:textSize=\"16sp\"\r\n                    android:textColor=\"@color/black\"\r\n                    android:layout_marginRight=\"20dp\"/>\r\n                <com.google.android.material.textfield.TextInputLayout\r\n                    android:id=\"@+id/main_textInputLayout_ID\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    >\r\n                    <EditText\r\n                        android:id=\"@+id/Edit_ID\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"45dp\"\r\n                        android:background=\"@drawable/edit_text_style\"\r\n                        android:hint=\"아이디 입력\"\r\n                        android:paddingStart=\"16dp\"\r\n                        style=\"@style/EditTextHint\"/>\r\n\r\n                </com.google.android.material.textfield.TextInputLayout>\r\n            </LinearLayout>\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:orientation=\"horizontal\"\r\n                android:gravity=\"right\"\r\n                android:layout_marginBottom=\"20dp\">\r\n                <TextView\r\n                    android:id=\"@+id/seller_register_id_check_tv\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:text=\"이미 존재하는 아이디입니다.\"\r\n                    android:textSize=\"12sp\"\r\n                    android:textColor=\"#FF0000\"\r\n                    android:layout_marginRight=\"10dp\"\r\n                    android:visibility=\"invisible\"/>\r\n                <Button\r\n                    android:id=\"@+id/seller_register_id_check_btn\"\r\n                    android:layout_width=\"80dp\"\r\n                    android:layout_height=\"40dp\"\r\n                    android:layout_marginRight=\"20dp\"\r\n                    android:text=\"중복확인\"\r\n                    android:textSize=\"12sp\"/>\r\n\r\n            </LinearLayout>\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:orientation=\"horizontal\"\r\n                android:paddingStart=\"20dp\"\r\n                android:paddingEnd=\"20dp\"\r\n                android:layout_marginBottom=\"5dp\">\r\n                <TextView\r\n                    android:layout_width=\"100dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:text=\"비밀번호\"\r\n                    android:textSize=\"16sp\"\r\n                    android:textColor=\"@color/black\"\r\n                    android:layout_marginRight=\"20dp\"/>\r\n                <com.google.android.material.textfield.TextInputLayout\r\n                    android:id=\"@+id/main_textInputLayout_PW\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    >\r\n                    <EditText\r\n                        android:id=\"@+id/Edit_PW\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"45dp\"\r\n                        android:background=\"@drawable/edit_text_style\"\r\n                        android:hint=\"비밀번호 입력\"\r\n                        android:paddingStart=\"16dp\"\r\n                        style=\"@style/EditTextHint\"/>\r\n                </com.google.android.material.textfield.TextInputLayout>\r\n            </LinearLayout>\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:orientation=\"horizontal\"\r\n                android:paddingStart=\"20dp\"\r\n                android:paddingEnd=\"20dp\"\r\n                android:layout_marginBottom=\"20dp\">\r\n                <TextView\r\n                    android:layout_width=\"100dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:text=\"\"\r\n                    android:textSize=\"16sp\"\r\n                    android:textColor=\"@color/black\"\r\n                    android:layout_marginRight=\"20dp\"/>\r\n                <EditText\r\n                    android:id=\"@+id/seller_register_password_check_edt\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"45dp\"\r\n                    android:background=\"@drawable/edit_text_style\"\r\n                    android:hint=\"비밀번호 입력\"\r\n                    android:paddingStart=\"16dp\"\r\n                    style=\"@style/EditTextHint\"/>\r\n            </LinearLayout>\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:orientation=\"horizontal\"\r\n                android:paddingStart=\"20dp\"\r\n                android:paddingEnd=\"20dp\"\r\n                android:layout_marginBottom=\"5dp\">\r\n                <TextView\r\n                    android:layout_width=\"100dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:text=\"이름\"\r\n                    android:textSize=\"16sp\"\r\n                    android:textColor=\"@color/black\"\r\n                    android:layout_marginRight=\"20dp\"/>\r\n                <com.google.android.material.textfield.TextInputLayout\r\n                    android:id=\"@+id/main_textInputLayout_create_name\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    >\r\n                    <EditText\r\n                        android:id=\"@+id/create_name\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"45dp\"\r\n                        android:background=\"@drawable/edit_text_style\"\r\n                        android:hint=\"이름 입력\"\r\n                        android:paddingStart=\"16dp\"\r\n                        style=\"@style/EditTextHint\"/>\r\n\r\n                </com.google.android.material.textfield.TextInputLayout>\r\n            </LinearLayout>\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:orientation=\"horizontal\"\r\n                android:paddingStart=\"20dp\"\r\n                android:paddingEnd=\"20dp\"\r\n                android:layout_marginBottom=\"5dp\">\r\n                <TextView\r\n                    android:layout_width=\"100dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:text=\"휴대폰 번호\"\r\n                    android:textSize=\"16sp\"\r\n                    android:textColor=\"@color/black\"\r\n                    android:layout_marginRight=\"20dp\"/>\r\n                <com.google.android.material.textfield.TextInputLayout\r\n                    android:id=\"@+id/main_textInputLayout_phone_number_create\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    >\r\n                    <EditText\r\n                        android:id=\"@+id/phone_number_create\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"45dp\"\r\n                        android:background=\"@drawable/edit_text_style\"\r\n                        android:hint=\"휴대폰 번호 입력\"\r\n                        android:paddingStart=\"16dp\"\r\n                        style=\"@style/EditTextHint\"/>\r\n\r\n                </com.google.android.material.textfield.TextInputLayout>\r\n            </LinearLayout>\r\n\r\n            <Button\r\n                android:id=\"@+id/button_location\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"45dp\"\r\n                android:background=\"@drawable/register_button_style\"\r\n                android:text=\"위치 조회\"\r\n                android:textColor=\"@color/white\"\r\n                android:textStyle=\"bold\"\r\n                android:textSize=\"18sp\"\r\n                android:layout_marginLeft=\"20dp\"\r\n                android:layout_marginRight=\"20dp\"\r\n                android:layout_marginBottom=\"30dp\"\r\n                android:layout_marginTop=\"16dp\"\r\n                />\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:orientation=\"horizontal\"\r\n                android:paddingStart=\"20dp\"\r\n                android:paddingEnd=\"20dp\"\r\n                android:layout_marginBottom=\"5dp\">\r\n                <TextView\r\n                    android:layout_width=\"100dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:text=\"주소\"\r\n                    android:textSize=\"16sp\"\r\n                    android:textColor=\"@color/black\"\r\n                    android:layout_marginRight=\"20dp\"/>\r\n                <EditText\r\n                    android:id=\"@+id/editText\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"45dp\"\r\n                    android:background=\"@drawable/edit_text_style\"\r\n                    android:hint=\"주소 입력\"\r\n                    android:inputType=\"text\"\r\n                    android:digits=\"가-힣\"\r\n                    android:paddingStart=\"16dp\"\r\n                    style=\"@style/EditTextHint\"/>\r\n            </LinearLayout>\r\n            <fragment\r\n                android:id=\"@+id/map\"\r\n                android:name=\"com.google.android.gms.maps.SupportMapFragment\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"300dp\" />\r\n            <Button\r\n                android:id=\"@+id/sign_up_btn\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"45dp\"\r\n                android:background=\"@drawable/register_button_style\"\r\n                android:text=\"회원가입\"\r\n                android:textColor=\"@color/white\"\r\n                android:textStyle=\"bold\"\r\n                android:textSize=\"18sp\"\r\n                android:layout_marginTop=\"20dp\"\r\n                android:layout_marginLeft=\"20dp\"\r\n                android:layout_marginRight=\"20dp\"\r\n                android:layout_marginBottom=\"50dp\"\r\n                />\r\n\r\n        </LinearLayout>\r\n\r\n\r\n    </ScrollView>\r\n\r\n\r\n</LinearLayout>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_sign_up.xml b/app/src/main/res/layout/activity_sign_up.xml
--- a/app/src/main/res/layout/activity_sign_up.xml	
+++ b/app/src/main/res/layout/activity_sign_up.xml	
@@ -222,11 +222,7 @@
                     android:paddingStart="16dp"
                     style="@style/EditTextHint"/>
             </LinearLayout>
-            <fragment
-                android:id="@+id/map"
-                android:name="com.google.android.gms.maps.SupportMapFragment"
-                android:layout_width="match_parent"
-                android:layout_height="300dp" />
+
             <Button
                 android:id="@+id/sign_up_btn"
                 android:layout_width="match_parent"
Index: app/src/main/java/com/example/icontest2/SignUpActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.icontest2\r\n\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.text.Editable\r\nimport android.text.InputFilter\r\nimport android.text.TextWatcher\r\nimport android.util.Log\r\nimport android.widget.EditText\r\nimport com.example.icontest2.databinding.ActivitySignUpBinding\r\nimport java.util.regex.Pattern\r\nimport android.Manifest\r\nimport android.content.Intent\r\nimport android.content.pm.PackageManager\r\nimport android.location.Geocoder\r\nimport android.widget.Button\r\nimport androidx.core.app.ActivityCompat\r\nimport androidx.core.content.ContextCompat\r\nimport com.google.android.gms.location.LocationServices\r\nimport com.google.android.gms.maps.CameraUpdateFactory\r\nimport com.google.android.gms.maps.GoogleMap\r\nimport com.google.android.gms.maps.OnMapReadyCallback\r\nimport com.google.android.gms.maps.SupportMapFragment\r\nimport com.google.android.gms.maps.model.LatLng\r\nimport com.google.android.gms.maps.model.MarkerOptions\r\nimport com.kakao.usermgmt.StringSet.email\r\nimport com.kakao.usermgmt.StringSet.name\r\nimport retrofit2.Call\r\nimport retrofit2.Callback\r\nimport retrofit2.Response\r\nimport retrofit2.Retrofit\r\nimport retrofit2.converter.gson.GsonConverterFactory\r\nimport retrofit2.http.Body\r\nimport java.util.*\r\n\r\n\r\nclass SignUpActivity : AppCompatActivity(), OnMapReadyCallback {\r\n    private lateinit var binding: ActivitySignUpBinding\r\n    private lateinit var mMap: GoogleMap\r\n    private lateinit var buttonLocation: Button\r\n    private val REQUEST_LOCATION_PERMISSION = 1\r\n    private var TAG = \"SignUpActivity\"\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?){\r\n        super.onCreate(savedInstanceState)\r\n        binding = ActivitySignUpBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n\r\n        // 아이디, 비밀번호, 비밀번호 확인, 이름, 휴대폰번호의 editText id\r\n        val signUpBtn = binding.signUpBtn\r\n        val signUptextIdLengthChecker = binding.mainTextInputLayoutID\r\n        val signUptextPwLengthChecker = binding.mainTextInputLayoutPW\r\n        val lengthCheck = binding.mainTextInputLayoutCreateName\r\n        val signUPEdit_ID = binding.EditID // 아이디 만들기\r\n        val signUPEdit_PW = binding.EditPW // 비밀번호 만들기\r\n        val signUpCreate_name = binding.createName // 이름 만들기\r\n        val signUpCreate_phone_number = binding.phoneNumberCreate // 폰번호 숫자만 11자제한\r\n        val editText = binding.editText // 위치 조회값\r\n        setEditTextInput(signUpCreate_phone_number, 11)\r\n        val retrofit = Retrofit.Builder() // 서버통신\r\n            .baseUrl(\"http://13.209.9.240:8080/\")\r\n            .addConverterFactory(GsonConverterFactory.create())\r\n            .build()\r\n        // API 서비스 인터페이스 구현체 생성\r\n        val apiService = retrofit.create(Retrofit2Interface::class.java)\r\n\r\n        // '생성' 버튼 클릭 시 API 호출\r\n        signUpBtn.setOnClickListener {\r\n            val id = signUPEdit_ID.text.toString()\r\n            val password = signUPEdit_PW.text.toString()\r\n            val name = signUpCreate_name.text.toString()\r\n            val phoneNumber = signUpCreate_phone_number.text.toString()\r\n            val location = editText.text.toString()\r\n            val user = DataClass(id, password, name, phoneNumber, location)\r\n            apiService.createUser(user).enqueue(object : Callback<ApiResponse> {\r\n                override fun onResponse(call: Call<ApiResponse>, response: Response<ApiResponse>) {\r\n                    // 서버 응답 처리\r\n                    Log.d(TAG, \"onResponse 잘 들어왔음!!\")\r\n                    Log.d(TAG, \"${response}\")\r\n                    Log.d(TAG, \"${call}\")\r\n                    Log.d(TAG, \"${user}\")\r\n                    Log.d(TAG, \"${apiService.createUser(user)}\")\r\n                    Log.d(TAG, \"${response.body()}\")\r\n                }\r\n\r\n                override fun onFailure(call: Call<ApiResponse>, t: Throwable) {\r\n                    // 서버 에러 처리\r\n                    Log.d(TAG, \"onFailure 못 들어왔음!!\")\r\n                    Log.d(TAG, \"${t}\")\r\n                    Log.d(TAG, \"${call}\")\r\n                    Log.d(TAG, \"${user}\")\r\n                    Log.d(TAG, \"${apiService.createUser(user)}\")\r\n                }\r\n            })\r\n        }\r\n\r\n        //signUpBtn.setOnClickListener {\r\n        //    var intent = Intent(this, LoginActivity::class.java)\r\n        //    startActivity(intent)\r\n        //}\r\n\r\n        buttonLocation = findViewById(R.id.button_location) // 사용자 위치 조회 및 입력\r\n        buttonLocation.setOnClickListener {\r\n            requestLocationPermission()\r\n            showUserLocation()\r\n        }\r\n        val mapFragment = supportFragmentManager.findFragmentById(R.id.map) as SupportMapFragment\r\n        mapFragment.getMapAsync(this)\r\n\r\n        val buttonShowLocation = findViewById<Button>(R.id.button_location)\r\n        buttonShowLocation.setOnClickListener {\r\n            if (ContextCompat.checkSelfPermission(this,\r\n                    Manifest.permission.ACCESS_FINE_LOCATION)\r\n                == PackageManager.PERMISSION_GRANTED) {\r\n                // 위치 권한이 허용된 경우\r\n                showUserLocation()\r\n            } else {\r\n                // 위치 권한이 허용되지 않은 경우\r\n                ActivityCompat.requestPermissions(this,\r\n                    arrayOf(Manifest.permission.ACCESS_FINE_LOCATION),\r\n                    REQUEST_LOCATION_PERMISSION)\r\n            }\r\n        }\r\n\r\n        // 아이디, 패스워드 초과 경고 메세지\r\n        fun textLengthChecker() {\r\n            signUptextIdLengthChecker.isCounterEnabled = true\r\n            signUptextPwLengthChecker.isCounterEnabled = true\r\n            lengthCheck.isCounterEnabled = true\r\n\r\n            signUptextIdLengthChecker.counterMaxLength = 15 // ID 최대 길이\r\n            signUptextPwLengthChecker.counterMaxLength = 20 // PW 최대 길이\r\n            lengthCheck.counterMaxLength = 10\r\n\r\n            signUptextIdLengthChecker.isErrorEnabled = true\r\n            signUptextPwLengthChecker.isErrorEnabled = true\r\n            lengthCheck.isErrorEnabled = true\r\n\r\n            signUPEdit_ID.addTextChangedListener(object : TextWatcher {\r\n                override fun beforeTextChanged(p0: CharSequence?, p1: Int, p2: Int, p3: Int) {\r\n                }\r\n                override fun onTextChanged(p0: CharSequence?, p1: Int, p2: Int, p3: Int) {\r\n                }\r\n                override fun afterTextChanged(p0: Editable?) {\r\n                    if (signUPEdit_ID.length() > 15) {\r\n                        signUptextIdLengthChecker.error = \"ID의 글자 수를 초과하였습니다.\"\r\n                    } else {\r\n                        signUptextIdLengthChecker.error = null\r\n                    }\r\n                    if (signUPEdit_ID.length() < 5) {\r\n                        signUptextIdLengthChecker.error = \"ID는 최소 5자 이상입니다.\"\r\n                    } else {\r\n                        signUptextIdLengthChecker.error = null\r\n                    }\r\n                }\r\n\r\n            })\r\n\r\n            signUPEdit_PW.addTextChangedListener(object : TextWatcher {\r\n                override fun beforeTextChanged(p0: CharSequence?, p1: Int, p2: Int, p3: Int) {\r\n                }\r\n                override fun onTextChanged(p0: CharSequence?, p1: Int, p2: Int, p3: Int) {\r\n                }\r\n                override fun afterTextChanged(p0: Editable?) {\r\n                    val pw = p0.toString()\r\n                    if (pw.contains(\" \")) {\r\n                        signUptextPwLengthChecker.error = \"공백을 포함할 수 없습니다.\"\r\n                    } else if (pw.length > 20) {\r\n                        signUptextPwLengthChecker.error = \"PW의 글자 수를 초과하였습니다.\"\r\n                    } else if (pw.length < 8) {\r\n                        signUptextPwLengthChecker.error = \"PW는 최소 8자 이상입니다.\"\r\n                    } else {\r\n                        signUptextPwLengthChecker.error = null\r\n                    }\r\n                }\r\n            })\r\n            signUpCreate_name.addTextChangedListener(object : TextWatcher {\r\n                override fun beforeTextChanged(p0: CharSequence?, p1: Int, p2: Int, p3: Int) {\r\n                }\r\n                override fun onTextChanged(p0: CharSequence?, p1: Int, p2: Int, p3: Int) {\r\n                    if (signUpCreate_name.length() > 10) {\r\n                        lengthCheck.error = \"이름의 글자 수를 초과 하였습니다.\"\r\n                    } else {\r\n                        lengthCheck.error = null\r\n                    }\r\n                }\r\n                override fun afterTextChanged(p0: Editable?) {\r\n                }\r\n            })\r\n        }\r\n\r\n        notKorean(signUPEdit_ID) // id 한글 예외처리\r\n        notKorean(signUPEdit_PW) // pw 한글 예외처리\r\n        onlyKorean(signUpCreate_name) // 이름 입력시 한글만\r\n        checkwhite(signUpCreate_name) // 이름 입력시 공백 확인\r\n        textLengthChecker() // 문자길이 체크\r\n\r\n    }\r\n\r\n    // 한글예외처리 함수\r\n    fun notKorean(editText: EditText) {\r\n        Log.d(TAG, \" - checkNotKorean\")\r\n        editText.addTextChangedListener(object : TextWatcher {\r\n            override fun beforeTextChanged(s: CharSequence?, start: Int, count: Int, after: Int) {}\r\n\r\n            override fun onTextChanged(s: CharSequence?, start: Int, before: Int, count: Int) {}\r\n\r\n            override fun afterTextChanged(s: Editable?) {\r\n                val text = s.toString()\r\n                if (text.matches(Regex(\"[^a-zA-Z0-9 ]+\")) || text.matches(Regex(\".*[ㄱ-ㅎㅏ-ㅣ가-힣]+.*\"))) {\r\n                    editText.error = \"영어와 숫자만 입력 가능합니다.\"\r\n                } else {\r\n                    editText.error = null\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    // 한글만 입력함수\r\n    fun onlyKorean(editText: EditText){\r\n        Log.d(TAG, \" - checkNotKorean\")\r\n        val pattern = Pattern.compile(\"[^ㄱ-ㅎ가-힣]*$\") // 한글을 제외한 문자열 패턴\r\n        editText.addTextChangedListener(object : TextWatcher {\r\n            override fun beforeTextChanged(s: CharSequence?, start: Int, count: Int, after: Int) {}\r\n            override fun onTextChanged(s: CharSequence?, start: Int, before: Int, count: Int) {}\r\n            override fun afterTextChanged(s: Editable?) {\r\n                val text = s.toString()\r\n                val matcher = pattern.matcher(text)\r\n                if (matcher.matches()) {\r\n                    editText.error = \"한글을 제외한 문자열은 입력할 수 없습니다.\"\r\n                } else {\r\n                    editText.error = null\r\n                }\r\n            }\r\n        })\r\n    }\r\n    // 공백체크함수\r\n    fun checkwhite(editText: EditText){\r\n        editText.addTextChangedListener(object : TextWatcher {\r\n            override fun beforeTextChanged(s: CharSequence?, start: Int, count: Int, after: Int) {}\r\n            override fun onTextChanged(s: CharSequence?, start: Int, before: Int, count: Int) {}\r\n            override fun afterTextChanged(s: Editable?) {\r\n                // EditText의 문자열 가져오기\r\n                val text = s.toString()\r\n                Log.d(TAG, \"${text} - checkWhiteSpace\")\r\n                // 결과 출력\r\n                if (text.contains(\" \")) {\r\n                    Log.d(TAG, \"${text} - 공백있음\")\r\n                    editText.error = \"공백이 포함되어 있습니다.\"\r\n                }\r\n            }\r\n        })\r\n\r\n    }\r\n    // 폰번호 입력시 11자제한, 숫자만 입력\r\n    fun setEditTextInput(editText: EditText, maxLength: Int) {\r\n        val inputFilter = arrayOf<InputFilter>(InputFilter { source, _, _, _, _, _ ->\r\n            if (source.toString().matches(Regex(\"[0-9]+\"))) {\r\n                null // 숫자일 경우, null 리턴\r\n            } else {\r\n                \"\" // 숫자가 아닐 경우, 빈 문자열(\"\") 리턴\r\n            }\r\n        })\r\n        editText.filters = inputFilter\r\n        editText.addTextChangedListener(object : TextWatcher {\r\n            override fun afterTextChanged(s: Editable?) {\r\n                val input = s.toString()\r\n                if (input.length > maxLength) {\r\n                    editText.error = \"입력할 수 있는 숫자는 ${maxLength}자리 이하입니다.\"\r\n                } else {\r\n                    editText.error = null\r\n                }\r\n                val text = s.toString()\r\n                Log.d(TAG, \"${text} - checkWhiteSpace\")\r\n                // 결과 출력\r\n                if (text.contains(\" \")) {\r\n                    Log.d(TAG, \"${text} - 공백있음\")\r\n                    editText.error = \"공백이 포함되어 있습니다.\"\r\n                }\r\n\r\n\r\n            }\r\n            override fun beforeTextChanged(s: CharSequence?, start: Int, count: Int, after: Int) {}\r\n            override fun onTextChanged(s: CharSequence?, start: Int, before: Int, count: Int) {}\r\n        })\r\n    }\r\n    // 사용자 위치 조회, 위치 입력\r\n    private fun showUserLocation() {\r\n        val editText = findViewById<EditText>(R.id.editText)\r\n        if (ContextCompat.checkSelfPermission(this,\r\n                Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED) {\r\n            mMap.isMyLocationEnabled = true\r\n\r\n            // 사용자 위치 가져오기\r\n            val fusedLocationProviderClient = LocationServices.getFusedLocationProviderClient(this)\r\n            fusedLocationProviderClient.lastLocation.addOnSuccessListener { location ->\r\n                if (location != null) {\r\n                    val geocoder = Geocoder(this, Locale.KOREAN)\r\n                    val addresses = geocoder.getFromLocation(location.latitude, location.longitude, 1)\r\n                    if (addresses != null) {\r\n                        if (addresses.isNotEmpty()) {\r\n                            val address = addresses[0]\r\n                            val addressStr = address.getAddressLine(0)\r\n                            editText.setText(addressStr)\r\n                        }\r\n                    }\r\n\r\n\r\n                    val latLng = LatLng(location.latitude, location.longitude)\r\n                    mMap.addMarker(MarkerOptions().position(latLng).title(\"User Location\"))\r\n                    mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, 15f))\r\n                }\r\n            }\r\n        }\r\n    }\r\n    override fun onMapReady(googleMap: GoogleMap) {\r\n        mMap = googleMap\r\n        mMap.uiSettings.isZoomControlsEnabled = true\r\n    }\r\n    override fun onRequestPermissionsResult(\r\n        requestCode: Int,\r\n        permissions: Array<out String>,\r\n        grantResults: IntArray\r\n    ) {\r\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults)\r\n        if (requestCode == REQUEST_LOCATION_PERMISSION) {\r\n            if (grantResults.isNotEmpty() && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\r\n                showUserLocation()\r\n            }\r\n        }\r\n    }\r\n    private fun requestLocationPermission() {\r\n        if (ContextCompat.checkSelfPermission(\r\n                this,\r\n                Manifest.permission.ACCESS_FINE_LOCATION\r\n            ) == PackageManager.PERMISSION_GRANTED\r\n        ) {\r\n            showUserLocation()\r\n        } else {\r\n            ActivityCompat.requestPermissions(\r\n                this,\r\n                arrayOf(Manifest.permission.ACCESS_FINE_LOCATION),\r\n                REQUEST_LOCATION_PERMISSION\r\n            )\r\n        }\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/icontest2/SignUpActivity.kt b/app/src/main/java/com/example/icontest2/SignUpActivity.kt
--- a/app/src/main/java/com/example/icontest2/SignUpActivity.kt	
+++ b/app/src/main/java/com/example/icontest2/SignUpActivity.kt	
@@ -10,7 +10,6 @@
 import com.example.icontest2.databinding.ActivitySignUpBinding
 import java.util.regex.Pattern
 import android.Manifest
-import android.content.Intent
 import android.content.pm.PackageManager
 import android.location.Geocoder
 import android.widget.Button
@@ -23,14 +22,11 @@
 import com.google.android.gms.maps.SupportMapFragment
 import com.google.android.gms.maps.model.LatLng
 import com.google.android.gms.maps.model.MarkerOptions
-import com.kakao.usermgmt.StringSet.email
-import com.kakao.usermgmt.StringSet.name
 import retrofit2.Call
 import retrofit2.Callback
 import retrofit2.Response
 import retrofit2.Retrofit
 import retrofit2.converter.gson.GsonConverterFactory
-import retrofit2.http.Body
 import java.util.*
 
 
@@ -71,7 +67,7 @@
             val name = signUpCreate_name.text.toString()
             val phoneNumber = signUpCreate_phone_number.text.toString()
             val location = editText.text.toString()
-            val user = DataClass(id, password, name, phoneNumber, location)
+            val user = CustomerRegisterDTO(id, password, name, phoneNumber, location)
             apiService.createUser(user).enqueue(object : Callback<ApiResponse> {
                 override fun onResponse(call: Call<ApiResponse>, response: Response<ApiResponse>) {
                     // 서버 응답 처리
